{"version":3,"sources":["components/Navbar/LeftBar/LeftBar.js","components/Navbar/RightBar/RightBar.js","components/Navbar/SideDrawer/drawerItems.js","components/Navbar/SideDrawer/SideDrawer.js","constants/styles.js","components/Navbar/Navbar.js","components/Cockpit/InputBox/TextBox/TextBox.js","constants/actions.js","components/Cockpit/InputBox/InputBox.js","constants/processors.js","components/Cockpit/DisplayBox/DisplayBox.js","components/Cockpit/Cockpit.js","components/Page/Page.js","containers/App.js","serviceWorker.js","processors/index.js","reducers/index.js","store.js","index.js"],"names":["withStyles","theme","title","color","props","react_default","a","createElement","Grid_default","item","container","alignItems","Typography_default","variant","className","classes","githubIcon","fontSize","IconButton_default","index_es","icon","faGithub","drawerItems","text","Code_default","Whatshot_default","Email_default","ContactSupport_default","SideDrawer","state","open","handleDrawerToggle","_this","setState","sideList","List_default","map","curr","i","ListItem_default","button","key","ListItemIcon_default","ListItemText_default","primary","Hidden_default","xsDown","implementation","Drawer_default","this","drawer","paper","drawerPaper","anchor","Component","Object","defineProperty","breakpoints","up","width","navbar","concat","marginLeft","AppBar_default","position","Toolbar_default","justify","Navbar_LeftBar_LeftBar","Navbar_SideDrawer_SideDrawer","Navbar_RightBar_RightBar","connect","dispatch","OnTextChanged","processor","type","textField","TextField_default","id","multiline","rows","inputProps","style","textAlign","paddingTop","autoFocus","onChange","e","target","value","ProcessorOptions","Paper_default","textPaper","elevation","BottomNavigation_default","OnNavActionChanged","optionsBar","BottomNavigationAction_default","TextBox","event","marginTop","margin","backgroundColor","borderRadius","DisplayBox","clipboardBarOpen","handleClick","handleClose","lib","displayBox","onClick","displayText","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","aria-label","close","Close_default","transformedText","minHeight","padding","&:hover","cursor","userSelect","spacing","unit","_cockpit","cockpit","xs","InputBox_InputBox","Cockpit_DisplayBox_DisplayBox","Page","components_Navbar_Navbar","components_Cockpit_Cockpit","App","components_Page_Page","Boolean","window","location","hostname","match","process","replace","processBloodTypeB","trim","processTrumpet","processClap","split","c","toLowerCase","toUpperCase","join","processOk","initialState","reducer","arguments","length","undefined","newState","objectSpread","newText","newProcessor","store","createStore","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f2057c4.chunk.js","sourcesContent":["// React\r\nimport React from \"react\";\r\n\r\n// Material UI components\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  // Style for the page title\r\n  title: {\r\n    color: \"#424242\"\r\n  }\r\n});\r\n\r\n// LeftBar\r\nconst LeftBar = props => (\r\n  <Grid item>\r\n    <Grid container alignItems=\"center\">\r\n      <Typography variant=\"h6\" color=\"inherit\" className={props.classes.title}>\r\n        Text Transformer\r\n      </Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(LeftBar);\r\n","// React\r\nimport React from \"react\";\r\n\r\n// Material UI components\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  // Style for the Github icon\r\n  githubIcon: {\r\n    fontSize: \"2rem\"\r\n  }\r\n});\r\n\r\n// RightBar\r\nconst RightBar = props => (\r\n  <Grid item>\r\n    <IconButton color=\"inherit\">\r\n      <FontAwesomeIcon icon={faGithub} className={props.classes.githubIcon} />\r\n    </IconButton>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(RightBar);\r\n","// React\r\nimport React from \"react\";\r\n\r\n// Icons\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport WhatsHotIcon from \"@material-ui/icons/Whatshot\";\r\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\n\r\nconst drawerItems = [\r\n  {text: \"About\", icon: <CodeIcon/>},\r\n  {text: \"Processors\", icon: <WhatsHotIcon/>},\r\n  {text: \"Make suggestion\", icon: <EmailIcon/>},\r\n  {text: \"Help\", icon: <ContactSupportIcon/>}\r\n];\r\n\r\nexport default drawerItems;\r\n","// React\r\nimport React, { Component } from \"react\";\r\n\r\n// Material UI components\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\n// Constants\r\nimport { DRAWER_WIDTH } from \"../../../constants/styles\";\r\n\r\n// All the drawer items\r\nimport drawerItems from \"./drawerItems\";\r\n\r\nconst styles = theme => ({\r\n  // Hide the drawer when the viewport is small\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: DRAWER_WIDTH\r\n    }\r\n  },\r\n  drawerPaper: {\r\n    width: DRAWER_WIDTH\r\n  }\r\n});\r\n\r\nclass SideDrawer extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState({ open: !this.state.open });\r\n  };\r\n\r\n  render() {\r\n    const sideList = (\r\n      <List>\r\n        {drawerItems.map((curr, i) => (\r\n          <ListItem button key={i}>\r\n            <ListItemIcon>{curr.icon}</ListItemIcon>\r\n            <ListItemText primary={curr.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    );\r\n\r\n    return (\r\n      <Hidden xsDown implementation=\"css\">\r\n        <Drawer\r\n          className={this.props.classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: this.props.classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n        >\r\n          {sideList}\r\n        </Drawer>\r\n      </Hidden>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","export const DRAWER_WIDTH = 250;\r\nexport const DISPLAY_PAPER_PADDING = 50;\r\nexport const INPUT_TEXTFIELD_PADDING_TOP = 20;\r\nexport const PAPER_MARGIN_TOP = 50;\r\nexport const PAPER_WIDTH = \"70%\";\r\n","// React\r\nimport React from \"react\";\r\n\r\n// Material UI components\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Navbar components\r\nimport LeftBar from \"./LeftBar/LeftBar\";\r\nimport RightBar from \"./RightBar/RightBar\";\r\nimport SideDrawer from \"./SideDrawer/SideDrawer\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Constants\r\nimport { DRAWER_WIDTH } from \"../../constants/styles\";\r\n\r\nconst styles = theme => ({\r\n  // Style for the navbar\r\n  navbar: {\r\n    // Make navbar full size when viewport is small\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n      marginLeft: DRAWER_WIDTH\r\n    }\r\n  }\r\n});\r\n\r\n// Navbar\r\nconst Navbar = props => (\r\n  <AppBar position=\"static\" color=\"inherit\" className={props.classes.navbar}>\r\n    <Toolbar>\r\n      <Grid justify=\"space-between\" container alignItems=\"center\">\r\n        <LeftBar />\r\n        <SideDrawer />\r\n        <RightBar />\r\n      </Grid>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","// React\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Material UI components\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Constants\r\nimport { INPUT_TEXTFIELD_PADDING_TOP } from \"../../../../constants/styles\";\r\nimport { GENERATE } from \"../../../../constants/actions\";\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  OnTextChanged: (text, processor) => dispatch({text: text, type: GENERATE, processor: processor})\r\n});\r\n\r\nconst InputBox = props => (\r\n  <TextField\r\n    id=\"outlined-multiline-static\"\r\n    multiline\r\n    rows=\"10\"\r\n    className={props.classes.textField}\r\n    inputProps={{\r\n      style: {textAlign: \"center\", fontSize: \"3rem\", paddingTop: INPUT_TEXTFIELD_PADDING_TOP}\r\n    }}\r\n    autoFocus={true}\r\n    onChange={e => {\r\n      props.OnTextChanged(e.target.value, props.type);\r\n    }}\r\n  />\r\n);\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(styles)(InputBox));\r\n","export const GENERATE = \"GENERATE\";\r\nexport const CHANGE = \"CHANGE\";\r\n","// React\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Custom components\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextBox from \"./TextBox/TextBox\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Constants\r\nimport { DISPLAY_PAPER_PADDING, PAPER_MARGIN_TOP, PAPER_WIDTH } from \"../../../constants/styles\";\r\nimport { BLOOD_TYPE_B, CLAP, TRUMPET, OK } from \"../../../constants/processors\";\r\nimport { CHANGE } from \"../../../constants/actions\";\r\n\r\nconst styles = theme => ({\r\n  textPaper: {\r\n    marginTop: PAPER_MARGIN_TOP,\r\n    width: `calc(${PAPER_WIDTH} + ${2 * DISPLAY_PAPER_PADDING}px)`,\r\n    margin: \"auto\"\r\n  },\r\n  optionsBar: {\r\n    backgroundColor: \"lightgrey\",\r\n    borderRadius: \"inherit\",\r\n    width: \"100%\",\r\n    fontSize: \"5rem\"\r\n  }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  OnNavActionChanged: (event, processor) => dispatch({processor: processor, type: CHANGE})\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  processor: state.processor\r\n});\r\n\r\nclass ProcessorOptions extends Component {\r\n  render() {\r\n    return (\r\n      <Paper className={this.props.classes.textPaper} elevation={4}>\r\n        <BottomNavigation value={this.props.processor} onChange={this.props.OnNavActionChanged}\r\n                          className={this.props.classes.optionsBar}>\r\n          <BottomNavigationAction value={BLOOD_TYPE_B} icon=\"🅱️\"/>\r\n          <BottomNavigationAction value={CLAP} icon=\"👏\"/>\r\n          <BottomNavigationAction value={TRUMPET} icon=\"🎺\"/>\r\n          <BottomNavigationAction value={OK} icon=\"👌\"/>\r\n        </BottomNavigation>\r\n\r\n        <TextBox type={this.props.processor}/>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProcessorOptions));","export const BLOOD_TYPE_B = \"BLOOD_TYPE_B\";\r\nexport const CLAP = \"CLAP\";\r\nexport const TRUMPET = \"TRUMPET\";\r\nexport const OK = \"OK\";\r\n","// React\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Material UI components\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Constants\r\nimport { DISPLAY_PAPER_PADDING, PAPER_MARGIN_TOP, PAPER_WIDTH } from \"../../../constants/styles\";\r\n\r\n// Clipboard API\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst styles = theme => ({\r\n  displayBox: {\r\n    width: `calc(${PAPER_WIDTH})`,\r\n    margin: \"auto\",\r\n    marginTop: PAPER_MARGIN_TOP,\r\n    minHeight: \"25vh\",\r\n    padding: DISPLAY_PAPER_PADDING,\r\n    textAlign: \"center\",\r\n    fontSize: \"3rem\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    },\r\n    userSelect: \"none\"\r\n  },\r\n  close: {\r\n    padding: theme.spacing.unit / 2\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  text: state.transformedText\r\n});\r\n\r\nclass DisplayBox extends Component {\r\n  state = {\r\n    clipboardBarOpen: false\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({open: true});\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CopyToClipboard text={this.props.text}>\r\n          <Paper className={this.props.classes.displayBox} elevation={4} onClick={this.handleClick}>\r\n            <Typography variant=\"h2\" color=\"inherit\" className={this.props.classes.displayText}>\r\n              {this.props.text}\r\n            </Typography>\r\n          </Paper>\r\n        </CopyToClipboard>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          message={<span id=\"message-id\">Copied to clipboard</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={this.props.classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon/>\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(DisplayBox));","// React\r\nimport React from \"react\";\r\n\r\n// Material UI components\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// Cockpit components\r\nimport InputBox from \"./InputBox/InputBox\";\r\nimport DisplayBox from \"./DisplayBox/DisplayBox\";\r\n\r\n// Style tool\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n// Constants\r\nimport { DRAWER_WIDTH } from \"../../constants/styles\";\r\n\r\nconst styles = theme => ({\r\n  // Style for the navbar\r\n  cockpit: {\r\n    // Shift cockpit when viewport is small\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n      marginLeft: DRAWER_WIDTH\r\n    },\r\n    marginTop: \"1rem\"\r\n  }\r\n});\r\n\r\nconst Cockpit = props => (\r\n  <Grid\r\n    justify=\"center\"\r\n    container\r\n    alignItems=\"center\"\r\n    className={props.classes.cockpit}\r\n  >\r\n    <Grid item xs={12}>\r\n      <InputBox />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <DisplayBox />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(Cockpit);\r\n","// React\r\nimport React from \"react\";\r\n\r\n// Custom components\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Cockpit from \"../Cockpit/Cockpit\";\r\n\r\nconst Page = () => (\r\n  <div>\r\n    <Navbar />\r\n    <Cockpit />\r\n  </div>\r\n);\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\n\r\nimport Page from \"../components/Page/Page\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <Page/>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {BLOOD_TYPE_B, TRUMPET, CLAP, OK} from \"../constants/processors\";\r\n\r\n// Replace every occurrence of b and B with the blood type b emoji\r\nconst processBloodTypeB = text => text.replace(/[bB]/g, \"🅱️\");\r\n\r\n// Replace spaces with the clap emoji\r\nconst processClap = text => text.replace(/ +/g, \"👏\");\r\n\r\n// Trim the text and prepend + append the trumpet emoji\r\nconst processTrumpet = text => `🎺${text.trim()}🎺`;\r\n\r\n// Alternating upper and lower cases\r\nconst processOk = text => text.split('').map((c, i) => (i % 2 ? c.toLowerCase() : c.toUpperCase())).join('');\r\n\r\nconst process = (text, processor) => {\r\n  switch (processor) {\r\n    case BLOOD_TYPE_B: return processBloodTypeB(text);\r\n    case TRUMPET: return processTrumpet(text);\r\n    case CLAP: return processClap(text);\r\n    case OK: return processOk(text);\r\n    default: return text;\r\n  }\r\n};\r\n\r\nexport default process;","// Main processor API\r\nimport process from \"../processors\";\r\n\r\n// Constants\r\nimport { BLOOD_TYPE_B } from \"../constants/processors\";\r\nimport { CHANGE, GENERATE } from \"../constants/actions\";\r\n\r\n// Initial reducer state\r\nconst initialState = {type: BLOOD_TYPE_B, text: \"\", processor: BLOOD_TYPE_B, transformedText: \"\"};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  // Duplicate state\r\n  const newState = {...state};\r\n\r\n  switch (action.type) {\r\n\r\n    // Generate text\r\n    case GENERATE:\r\n      const newText = action.text;\r\n\r\n      newState.text = newText;\r\n      newState.transformedText = process(newText, state.processor);\r\n\r\n      return newState;\r\n\r\n    // Hot swap processor\r\n    case CHANGE:\r\n      const newProcessor = action.processor;\r\n\r\n      newState.processor = newProcessor;\r\n      newState.transformedText = process(newState.text, newProcessor);\r\n\r\n      return newState;\r\n\r\n    default:\r\n      return newState;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}